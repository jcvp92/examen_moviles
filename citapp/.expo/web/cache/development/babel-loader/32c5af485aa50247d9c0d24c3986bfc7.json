{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Momento2_Aplicativos_Moviles\\\\citapp\\\\screens\\\\create-appointments.js\";\nimport React from \"react-native-web/dist/index\";\nimport { useState } from \"react-native-web/dist/index\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { TextInput, TouchableHighlight } from 'react-native-gesture-handler';\n\nfunction validate(appointmentName, appointmentDate, name, lastname, identity, borndate, city, suburb, phone) {\n  var error = \"\";\n  var error_type = \"\";\n\n  if (appointmentName.length < 1) {\n    error = error + \"appointmentName, \";\n  }\n\n  if (appointmentDate.length < 1) {\n    error = error + \"appointmentDate, \";\n  }\n\n  if (name.length < 1) {\n    error = error + \"name, \";\n  }\n\n  if (lastname.length < 1) {\n    error = error + \"lastname, \";\n  }\n\n  if (isNaN(identity)) {\n    error_type = error_type + \"Identity is not a number \";\n  }\n\n  if (identity.length < 1) {\n    error = error + \"identity, \";\n  }\n\n  if (borndate.length < 1) {\n    error = error + \"borndate, \";\n  }\n\n  if (city.length < 1) {\n    error = error + \"city, \";\n  }\n\n  if (suburb.length < 1) {\n    error = error + \"suburb, \";\n  }\n\n  if (phone.length < 10) {\n    error = error + \"phone\";\n  }\n\n  if (isNaN(phone)) {\n    error_type = error_type + \"Phone is not a number \";\n  }\n\n  if (error.length > 0) {\n    Alert.alert(\"Form failed\", \"The following items require your attention: \" + error);\n    return false;\n  } else {\n    if (error_type.length < 1) {\n      Alert.alert(\"Form failed\", \"The following items require your attention: \" + error_type);\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nfunction CreateAppointments(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var userid = route.params.userid;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      appointmentName = _useState2[0],\n      setAppointmentName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      appointmentDate = _useState4[0],\n      setAppointmentDate = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      setName = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      lastname = _useState8[0],\n      setLastname = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      identity = _useState10[0],\n      setIdentity = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      borndate = _useState12[0],\n      setBorndate = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      city = _useState14[0],\n      setCity = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      suburb = _useState16[0],\n      setSuburb = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      phone = _useState18[0],\n      setPhone = _useState18[1];\n\n  var createAppointment = function createAppointment() {\n    var response, json;\n    return _regeneratorRuntime.async(function createAppointment$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!validate(appointmentName, appointmentDate, name, lastname, identity, borndate, city, suburb, phone)) {\n              _context.next = 15;\n              break;\n            }\n\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetch(api + 'ddappointment', {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                title: appointmentName,\n                date: appointmentDate,\n                user: userid,\n                name: name,\n                lastname: lastname,\n                identity: identity,\n                borndate: borndate,\n                city: city,\n                suburb: suburb,\n                phone: phone\n              })\n            }));\n\n          case 4:\n            response = _context.sent;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 7:\n            json = _context.sent;\n            Alert.alert(\"Appointment created successfuly\");\n            navigation.navigate('ListAppointments', {\n              userid: userid\n            });\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](1);\n            Alert.alert(\"An error has ocurred: \" + _context.t0);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 12]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Appointment description\",\n    onChangeText: function onChangeText(text) {\n      return setAppointmentName(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Appointment date\",\n    onChangeText: function onChangeText(text) {\n      return setAppointmentDate(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Name\",\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Lastname\",\n    onChangeText: function onChangeText(text) {\n      return setLastname(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Identity\",\n    onChangeText: function onChangeText(text) {\n      return setIdentity(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Born date\",\n    onChangeText: function onChangeText(text) {\n      return setBorndate(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"City of residence\",\n    onChangeText: function onChangeText(text) {\n      return setCity(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Suburb\",\n    onChangeText: function onChangeText(text) {\n      return setSuburb(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Phone\",\n    onChangeText: function onChangeText(text) {\n      return setPhone(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableHighlight, {\n    style: styles.createAppointmentButton,\n    onPress: createAppointment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyleButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, \"Create Appointment\")));\n}\n\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  textInput: {\n    padding: 10,\n    borderColor: 'black',\n    borderRadius: 5,\n    borderWidth: 1,\n    marginTop: 10,\n    width: Dimensions.get('screen').width * 0.9\n  },\n  createAppointmentButton: {\n    marginTop: 10,\n    padding: 15,\n    backgroundColor: '#0288d1',\n    borderRadius: 5,\n    width: Dimensions.get('screen').width * 0.9,\n    alignItems: 'center'\n  },\n  textStyleButton: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 17\n  }\n});\nexport default CreateAppointments;","map":{"version":3,"sources":["C:/xampp/htdocs/Momento2_Aplicativos_Moviles/citapp/screens/create-appointments.js"],"names":["React","useState","TextInput","TouchableHighlight","validate","appointmentName","appointmentDate","name","lastname","identity","borndate","city","suburb","phone","error","error_type","length","isNaN","Alert","alert","CreateAppointments","route","navigation","userid","params","setAppointmentName","setAppointmentDate","setName","setLastname","setIdentity","setBorndate","setCity","setSuburb","setPhone","createAppointment","fetch","api","method","headers","Accept","body","JSON","stringify","title","date","user","response","json","navigate","styles","container","textInput","text","createAppointmentButton","textStyleButton","StyleSheet","create","flex","flexDirection","alignItems","padding","borderColor","borderRadius","borderWidth","marginTop","width","Dimensions","get","backgroundColor","color","fontWeight","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from 'react-native';\nimport { StyleSheet, Text, View, Dimensions, Alert } from 'react-native';\nimport { TextInput, TouchableHighlight } from 'react-native-gesture-handler';\n\nfunction validate(appointmentName, appointmentDate, name, lastname, identity, borndate, city, suburb, phone) {\n    var error = \"\";\n    var error_type = \"\";\n    if (appointmentName.length < 1) { error = error + \"appointmentName, \" }\n    if (appointmentDate.length < 1) { error = error + \"appointmentDate, \" }\n    if (name.length < 1) { error = error + \"name, \" }\n    if (lastname.length < 1) { error = error + \"lastname, \" }\n    if (isNaN(identity)) { error_type = error_type + \"Identity is not a number \" }\n    if (identity.length < 1) { error = error + \"identity, \" }\n    if (borndate.length < 1) { error = error + \"borndate, \" }\n    if (city.length < 1) { error = error + \"city, \" }\n    if (suburb.length < 1) { error = error + \"suburb, \" }\n    if (phone.length < 10) { error = error + \"phone\" }\n    if (isNaN(phone)) { error_type = error_type + \"Phone is not a number \" }\n\n\n    if (error.length > 0) {\n        Alert.alert(\"Form failed\",\"The following items require your attention: \" + error);\n        return false;\n    } else {\n        if (error_type.length < 1) {\n            Alert.alert(\"Form failed\",\"The following items require your attention: \" + error_type);\n            return true;\n        } else {\n            return false;\n        }\n\n    }\n\n}\n\nfunction CreateAppointments({ route, navigation }) {\n    const { userid } = route.params;\n    const [appointmentName, setAppointmentName] = useState(\"\");\n    const [appointmentDate, setAppointmentDate] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [lastname, setLastname] = useState(\"\");\n    const [identity, setIdentity] = useState(\"\");\n    const [borndate, setBorndate] = useState(\"\");\n    const [city, setCity] = useState(\"\");\n    const [suburb, setSuburb] = useState(\"\");\n    const [phone, setPhone] = useState(\"\");\n    const createAppointment = async () => {\n        if (validate(appointmentName, appointmentDate, name, lastname, identity, borndate, city, suburb, phone)) {\n            try {\n                const response = await fetch(api +'ddappointment', {\n                    method: 'POST',\n                    headers: {\n                        Accept: 'application/json',\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({\n                        title: appointmentName,\n                        date: appointmentDate,\n                        user: userid,\n                        name: name,\n                        lastname: lastname,\n                        identity: identity,\n                        borndate: borndate,\n                        city: city,\n                        suburb: suburb,\n                        phone: phone,\n                    }),\n                });\n                const json = await response.json();\n                Alert.alert(\"Appointment created successfuly\");\n                navigation.navigate('ListAppointments', {\n                    userid: userid\n                });\n            } catch (error) {\n                Alert.alert(\"An error has ocurred: \" + error);\n            }\n        }\n    }\n\n    return (\n        <View style={styles.container}>\n            <TextInput style={styles.textInput} placeholder=\"Appointment description\" onChangeText={text => setAppointmentName(text)} />\n            <TextInput style={styles.textInput} placeholder=\"Appointment date\" onChangeText={text => setAppointmentDate(text)} />\n\n            <TextInput style={styles.textInput} placeholder=\"Name\" onChangeText={text => setName(text)} />\n            <TextInput style={styles.textInput} placeholder=\"Lastname\" onChangeText={text => setLastname(text)} />\n            <TextInput style={styles.textInput} placeholder=\"Identity\" onChangeText={text => setIdentity(text)} />\n            <TextInput style={styles.textInput} placeholder=\"Born date\" onChangeText={text => setBorndate(text)} />\n            <TextInput style={styles.textInput} placeholder=\"City of residence\" onChangeText={text => setCity(text)} />\n            <TextInput style={styles.textInput} placeholder=\"Suburb\" onChangeText={text => setSuburb(text)} />\n            <TextInput style={styles.textInput} placeholder=\"Phone\" onChangeText={text => setPhone(text)} />\n\n            <TouchableHighlight style={styles.createAppointmentButton} onPress={createAppointment}>\n                <Text style={styles.textStyleButton}>Create Appointment</Text>\n            </TouchableHighlight>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    textInput: {\n        padding: 10,\n        borderColor: 'black',\n        borderRadius: 5,\n        borderWidth: 1,\n        marginTop: 10,\n        width: Dimensions.get('screen').width * 0.9\n    },\n    createAppointmentButton: {\n        marginTop: 10,\n        padding: 15,\n        backgroundColor: '#0288d1',\n        borderRadius: 5,\n        width: Dimensions.get('screen').width * 0.9,\n        alignItems: 'center'\n    },\n    textStyleButton: {\n        color: 'white',\n        fontWeight: 'bold',\n        fontSize: 17\n    }\n});\n\nexport default CreateAppointments;"]},"metadata":{},"sourceType":"module"}