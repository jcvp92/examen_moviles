{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Momento2_Aplicativos_Moviles\\\\citapp\\\\screens\\\\login.js\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { TouchableHighlight, TextInput } from \"react-native-gesture-handler\";\nimport { tan } from \"react-native-reanimated\";\nimport { api } from \"../global\";\n\nfunction Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var getUser = function getUser() {\n    var api_php, api_nodejs_mongo, response, json;\n    return _regeneratorRuntime.async(function getUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            api_php = \"http://192.168.1.6/citapp-api-php/login.php\";\n            api_nodejs_mongo = api + \"validateuser\";\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(fetch(api_nodejs_mongo, {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                username: username,\n                password: password\n              })\n            }));\n\n          case 5:\n            response = _context.sent;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 8:\n            json = _context.sent;\n\n            if (json.user) {\n              navigation.navigate('ListAppointments', {\n                userid: json.user._id\n              });\n            } else {\n              Alert.alert(\"Authentication Error\", json.response);\n            }\n\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n            Alert.alert(\"An error has ocurred: \" + _context.t0);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.loginScreenContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.loginFormView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.logoText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Citas medicas\"), React.createElement(Image, {\n    source: require(\"../assets/logo-citas.png\"),\n    style: {\n      height: 150,\n      width: 200\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Username\",\n    placeholderColor: \"#c4c3cb\",\n    style: styles.loginTextInput,\n    onChangeText: function onChangeText(text) {\n      return setUsername(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Password\",\n    placeholderColor: \"#c4c3cb\",\n    style: styles.loginTextInput,\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableHighlight, {\n    style: styles.loginButton,\n    onPress: getUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.loginButtonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Ingresar\")), React.createElement(TouchableHighlight, {\n    style: styles.registerButton,\n    onPress: function onPress() {\n      return navigation.navigate('CreateUsers');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.registerButtonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Registrarse\"))));\n}\n\nvar styles = StyleSheet.create({\n  containerView: {\n    flex: 1\n  },\n  loginScreenContainer: {\n    flex: 1\n  },\n  logoText: {\n    fontSize: 40,\n    fontWeight: \"800\",\n    marginTop: 100,\n    marginBottom: 10,\n    textAlign: 'center'\n  },\n  loginFormView: {\n    flex: 1\n  },\n  loginTextInput: {\n    height: 43,\n    fontSize: 14,\n    borderRadius: 5,\n    borderWidth: 1,\n    borderColor: '#0F0F0F',\n    backgroundColor: '#fafafa',\n    padding: 10,\n    marginLeft: 15,\n    marginRight: 15,\n    marginTop: 5,\n    marginBottom: 5\n  },\n  loginButton: {\n    backgroundColor: '#0EC833',\n    fontSize: 16,\n    borderRadius: 5,\n    height: 40,\n    margin: 15,\n    padding: 10,\n    width: Dimensions.get('screen').width * 0.93,\n    alignItems: 'center'\n  },\n  loginButtonText: {\n    color: 'white'\n  },\n  registerButton: {\n    fontSize: 5,\n    alignItems: 'center'\n  },\n  registerButtonText: {\n    color: '#1C1D1C'\n  }\n});\nexport default Login;","map":{"version":3,"sources":["C:/xampp/htdocs/Momento2_Aplicativos_Moviles/citapp/screens/login.js"],"names":["React","useState","TouchableHighlight","TextInput","tan","api","Login","navigation","username","setUsername","password","setPassword","getUser","api_php","api_nodejs_mongo","fetch","method","headers","Accept","body","JSON","stringify","response","json","user","navigate","userid","_id","Alert","alert","styles","loginScreenContainer","loginFormView","logoText","require","height","width","loginTextInput","text","loginButton","loginButtonText","registerButton","registerButtonText","StyleSheet","create","containerView","flex","fontSize","fontWeight","marginTop","marginBottom","textAlign","borderRadius","borderWidth","borderColor","backgroundColor","padding","marginLeft","marginRight","margin","Dimensions","get","alignItems","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Text, View, StyleSheet, Dimensions, Alert, Image } from 'react-native';\nimport { TouchableHighlight,  TextInput } from \"react-native-gesture-handler\";\nimport { tan } from \"react-native-reanimated\";\nimport { api } from '../global';\n\nfunction Login({ navigation }) {\n  const [username, setUsername] = useState(\"\");    \n  const [password, setPassword] = useState(\"\");\n  const getUser = async () => {\n    \n    try {\n        const api_php = \"http://192.168.1.6/citapp-api-php/login.php\";\n        const api_nodejs_mongo = api + \"validateuser\";\n        const response = await fetch(api_nodejs_mongo, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            }, \n            //lo que necesitas es detectar estilo /login desde una URl \n            //http://192.168.1.6/citapp-api-php/ esto es una url con petición estandar,\n            //http://192.168.1.6/citapp-api-php/login.php y esto termina marcando con login.php con end point\n            //pues ahora que crees que hay que hacer dime?debemos mirar la ruta especifica parecido\n            ////debemos comparar la ruta con uno de nuestros comandos y si ninguno coincide pues mandas un error notfound 404\n            //pués con eso dicho ahora queda programarlo , vale como empezamos jaja\n            body: JSON.stringify({\n                username: username,\n                password: password\n            }),\n        });\n        const json = await response.json();        \n        if(json.user){\n          navigation.navigate('ListAppointments',{\n            userid: json.user._id\n          });\n        }else{\n          Alert.alert(\"Authentication Error\",json.response);\n        }\n    } catch (error) {\n        Alert.alert(\"An error has ocurred: \" + error);            \n    }\n}\n  \n  return (\n    <View style={styles.loginScreenContainer}>\n      <View style={styles.loginFormView}>\n        <Text style={styles.logoText}>Citas medicas</Text>\n        <Image source={require('../assets/logo-citas.png')} style={{height: 150, width:200, \n        }} />\n        <TextInput placeholder=\"Username\" placeholderColor=\"#c4c3cb\" style={styles.loginTextInput} onChangeText={text => setUsername(text)}/>\n        <TextInput placeholder=\"Password\" placeholderColor=\"#c4c3cb\" style={styles.loginTextInput} secureTextEntry={true} onChangeText={text => setPassword(text)} />\n        <TouchableHighlight style={styles.loginButton} onPress={getUser}>\n          <Text style={styles.loginButtonText}>Ingresar</Text>\n        </TouchableHighlight>\n        <TouchableHighlight style={styles.registerButton} onPress={()=>navigation.navigate('CreateUsers')}>\n          <Text style={styles.registerButtonText}>Registrarse</Text>\n        </TouchableHighlight>\n      </View>\n    </View>\n    \n    \n  );\n}\n\nconst styles = StyleSheet.create({\n  containerView: {\n    flex: 1,\n  },\n  loginScreenContainer: {\n    flex: 1,\n  },\n  logoText: {\n    fontSize: 40,\n    fontWeight: \"800\",\n    marginTop: 100,\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n  loginFormView: {\n    flex: 1\n  },\n  loginTextInput: {\n    height: 43,\n    fontSize: 14,\n    borderRadius: 5,\n    borderWidth: 1,\n    borderColor: '#0F0F0F',\n    backgroundColor: '#fafafa',\n    padding: 10,\n    marginLeft: 15,\n    marginRight: 15,\n    marginTop: 5,\n    marginBottom: 5,\n\n  },\n  loginButton: {\n    backgroundColor: '#0EC833',\n    fontSize: 16,\n    borderRadius: 5,\n    height: 40,\n    margin: 15,\n    padding: 10,\n    width: Dimensions.get('screen').width * 0.93,\n    alignItems: 'center'\n  },\n  loginButtonText: {\n    color: 'white'\n  },\n  registerButton: {\n    fontSize: 5,    \n    alignItems: 'center'\n  },\n  registerButtonText: {\n    color: '#1C1D1C'\n  },\n\n});\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}